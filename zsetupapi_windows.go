// MACHINE GENERATED BY 'go generate' COMMAND; DO NOT EDIT

package setupapi

import (
	"syscall"
	"unsafe"
)

var _ unsafe.Pointer

var (
	modsetupapi = syscall.NewLazyDLL("setupapi.dll")

	procSetupDiClassGuidsFromNameExW     = modsetupapi.NewProc("SetupDiClassGuidsFromNameExW")
	procSetupDiGetClassDevsExW           = modsetupapi.NewProc("SetupDiGetClassDevsExW")
	procSetupDiEnumDeviceInfo            = modsetupapi.NewProc("SetupDiEnumDeviceInfo")
	procSetupDiGetDeviceInstanceIdW      = modsetupapi.NewProc("SetupDiGetDeviceInstanceIdW")
	procSetupDiEnumDeviceInterfaces      = modsetupapi.NewProc("SetupDiEnumDeviceInterfaces")
	procSetupDiGetDeviceInterfaceDetailA = modsetupapi.NewProc("SetupDiGetDeviceInterfaceDetailA")
)

func setupDiClassGuidsFromNameEx(ClassName string, guid *Guid, size uint32, required_size *uint32, machineName string, reserved uint32) (err error) {
	var _p0 *uint16
	_p0, err = syscall.UTF16PtrFromString(ClassName)
	if err != nil {
		return
	}
	var _p1 *uint16
	_p1, err = syscall.UTF16PtrFromString(machineName)
	if err != nil {
		return
	}
	return _setupDiClassGuidsFromNameEx(_p0, guid, size, required_size, _p1, reserved)
}

func _setupDiClassGuidsFromNameEx(ClassName *uint16, guid *Guid, size uint32, required_size *uint32, machineName *uint16, reserved uint32) (err error) {
	r1, _, e1 := syscall.Syscall6(procSetupDiClassGuidsFromNameExW.Addr(), 6, uintptr(unsafe.Pointer(ClassName)), uintptr(unsafe.Pointer(guid)), uintptr(size), uintptr(unsafe.Pointer(required_size)), uintptr(unsafe.Pointer(machineName)), uintptr(reserved))
	if r1 == 0 {
		if e1 != 0 {
			err = error(e1)
		} else {
			err = syscall.EINVAL
		}
	}
	return
}

func setupDiGetClassDevsEx(ClassGuid *Guid, Enumerator *string, hwndParent uintptr, Flags uint32, DeviceInfoSet uintptr, MachineName string, reserved uint32) (handle Handle, err error) {
	var _p0 *uint16
	_p0, err = syscall.UTF16PtrFromString(MachineName)
	if err != nil {
		return
	}
	return _setupDiGetClassDevsEx(ClassGuid, Enumerator, hwndParent, Flags, DeviceInfoSet, _p0, reserved)
}

func _setupDiGetClassDevsEx(ClassGuid *Guid, Enumerator *string, hwndParent uintptr, Flags uint32, DeviceInfoSet uintptr, MachineName *uint16, reserved uint32) (handle Handle, err error) {
	r0, _, e1 := syscall.Syscall9(procSetupDiGetClassDevsExW.Addr(), 7, uintptr(unsafe.Pointer(ClassGuid)), uintptr(unsafe.Pointer(Enumerator)), uintptr(hwndParent), uintptr(Flags), uintptr(DeviceInfoSet), uintptr(unsafe.Pointer(MachineName)), uintptr(reserved), 0, 0)
	handle = Handle(r0)
	if handle == 0 {
		if e1 != 0 {
			err = error(e1)
		} else {
			err = syscall.EINVAL
		}
	}
	return
}

func setupDiEnumDeviceInfo(DeviceInfoSet Handle, MemberIndex uint32, DeviceInfoData *spDeviceInformationData) (err error) {
	r1, _, e1 := syscall.Syscall(procSetupDiEnumDeviceInfo.Addr(), 3, uintptr(DeviceInfoSet), uintptr(MemberIndex), uintptr(unsafe.Pointer(DeviceInfoData)))
	if r1 == 0 {
		if e1 != 0 {
			err = error(e1)
		} else {
			err = syscall.EINVAL
		}
	}
	return
}

func setupDiGetDeviceInstanceId(DeviceInfoSet Handle, DeviceInfoData *spDeviceInformationData, DeviceInstanceId unsafe.Pointer, DeviceInstanceIdSize uint32, RequiredSize *uint32) (err error) {
	r1, _, e1 := syscall.Syscall6(procSetupDiGetDeviceInstanceIdW.Addr(), 5, uintptr(DeviceInfoSet), uintptr(unsafe.Pointer(DeviceInfoData)), uintptr(DeviceInstanceId), uintptr(DeviceInstanceIdSize), uintptr(unsafe.Pointer(RequiredSize)), 0)
	if r1 == 0 {
		if e1 != 0 {
			err = error(e1)
		} else {
			err = syscall.EINVAL
		}
	}
	return
}

func setupDiEnumDeviceInterfaces(DeviceInfoSet Handle, DeviceInfoData *spDeviceInformationData, ClassGuid *Guid, MemberIndex uint32, DeviceInterfaceData *SPDeviceInterfaceData) (err error) {
	r1, _, e1 := syscall.Syscall6(procSetupDiEnumDeviceInterfaces.Addr(), 5, uintptr(DeviceInfoSet), uintptr(unsafe.Pointer(DeviceInfoData)), uintptr(unsafe.Pointer(ClassGuid)), uintptr(MemberIndex), uintptr(unsafe.Pointer(DeviceInterfaceData)), 0)
	if r1 == 0 {
		if e1 != 0 {
			err = error(e1)
		} else {
			err = syscall.EINVAL
		}
	}
	return
}

func setupDiGetDeviceInterfaceDetail(DeviceInfoSet Handle, DeviceInterfaceData *SPDeviceInterfaceData, DeviceInterfaceDetailData *SPDeviceInterfaceDetailData, DeviceInterfaceDetailDataSize uint32, RequiredSize *uint32, DeviceInfoData *spDeviceInformationData) (err error) {
	r1, _, e1 := syscall.Syscall6(procSetupDiGetDeviceInterfaceDetailA.Addr(), 6, uintptr(DeviceInfoSet), uintptr(unsafe.Pointer(DeviceInterfaceData)), uintptr(unsafe.Pointer(DeviceInterfaceDetailData)), uintptr(DeviceInterfaceDetailDataSize), uintptr(unsafe.Pointer(RequiredSize)), uintptr(unsafe.Pointer(DeviceInfoData)))
	if r1 == 0 {
		if e1 != 0 {
			err = error(e1)
		} else {
			err = syscall.EINVAL
		}
	}
	return
}
